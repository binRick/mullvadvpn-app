sudo: false
env:
  global:
    - MACOSX_DEPLOYMENT_TARGET="10.7"
    - LIBMNL_LIB_DIR="$TRAVIS_BUILD_DIR/dist-assets/binaries/linux"
    - LIBNFTNL_LIB_DIR="$TRAVIS_BUILD_DIR/dist-assets/binaries/linux"

git:
  submodules: false

before_install:
  - git submodule update --init

matrix:
  include:
    - language: node_js
      node_js: '8'
      cache: yarn

      install:
        - yarn install
        - yarn run flow-typed install
      before_script:
        - export DISPLAY=:99.0; sh -e /etc/init.d/xvfb start
      script:
        - yarn run lint
        - yarn run flow
        - yarn run check-format
        - yarn test


    # Daemon - macOS
    - language: rust
      rust: stable
      os: osx
      cache: cargo
      #      env:
      #      - OPENSSL_LIB_DIR="$TRAVIS_BUILD_DIR/dist-assets/binaries/macos"
      #      - OPENSSL_INCLUDE_DIR="$TRAVIS_BUILD_DIR/dist-assets/binaries/macos/include"
      before_script:
        - env
      script: &rust_script
        - source env.sh
        - cargo build --verbose
        - cargo test --verbose

    # Daemon - Linux
    - language: rust
      rust: nightly
      os: linux
      addons: &rust_linux_addons
        apt:
         sources:
          - sourceline: "ppa:jonathonf/gcc-7.3"
            key_url: "https://pgp.key-server.io/download/0xE03043828C3FF4BB"
         packages:
          - binutils
      cache: cargo
      #      env: &rust_linux_env
      #      - OPENSSL_LIB_DIR="$TRAVIS_BUILD_DIR/dist-assets/binaries/linux"
      #      - OPENSSL_INCLUDE_DIR="$TRAVIS_BUILD_DIR/dist-assets/binaries/linux/include"
      before_script: &rust_before_script
        - env
      script:
        - source env.sh
        - cargo build --verbose
        - cargo test --verbose
        # Install and run rustfmt on nightly only until rustfmt.toml settings are stabilized.
        - rustup component add rustfmt-preview
        - rustfmt --version
        - cargo fmt -- --check --unstable-features

    - language: rust
      rust: beta
      os: linux
      addons: *rust_linux_addons
      cache: cargo
      #env: *rust_linux_env
      before_script: *rust_before_script
      script: *rust_script

    - language: rust
      rust: stable
      os: linux
      addons: *rust_linux_addons
      cache: cargo
      #env: *rust_linux_env
      before_script: *rust_before_script
      script: *rust_script


notifications:
  email:
    on_success: never
    on_failure: never
